{
  "id": "pimcore_quill_bundle",
  "name": "pimcore_quill_bundle",
  "metaData": {
    "name": "pimcore_quill_bundle",
    "type": "app",
    "buildInfo": {
      "buildVersion": "0.0.1",
      "buildName": "pimcore-studio-quill-bundle"
    },
    "remoteEntry": {
      "name": "static/js/remoteEntry.js",
      "path": "",
      "type": "global"
    },
    "types": {
      "path": "",
      "name": "",
      "zip": "",
      "api": ""
    },
    "globalName": "pimcore_quill_bundle",
    "pluginVersion": "0.14.0",
    "prefetchInterface": false,
    "publicPath": "/bundles/pimcorequill/studio/build/937285b6-7db2-413f-8d42-df75a08cb609/"
  },
  "shared": [
    {
      "id": "pimcore_quill_bundle:react",
      "name": "react",
      "version": "*",
      "singleton": true,
      "requiredVersion": "^*",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "static/js/269.6ea4f059.js",
            "static/js/remoteEntry.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "pimcore_quill_bundle:quill",
      "name": "quill",
      "version": "2.0.3",
      "singleton": true,
      "requiredVersion": "^2.0.3",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "static/js/async/765.10839dbd.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "pimcore_quill_bundle:antd-style",
      "name": "antd-style",
      "version": "3.7.1",
      "singleton": true,
      "requiredVersion": "^3.7.1",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "static/js/async/37.0478317e.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "pimcore_quill_bundle:quill-table-better",
      "name": "quill-table-better",
      "version": "1.1.6",
      "singleton": true,
      "requiredVersion": "^1.1.6",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "static/js/async/145.ab713703.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    },
    {
      "id": "pimcore_quill_bundle:react-dom",
      "name": "react-dom",
      "version": "*",
      "singleton": true,
      "requiredVersion": "^*",
      "assets": {
        "js": {
          "async": [],
          "sync": [
            "static/js/269.6ea4f059.js",
            "static/js/remoteEntry.js"
          ]
        },
        "css": {
          "async": [],
          "sync": []
        }
      }
    }
  ],
  "remotes": [
    {
      "federationContainerName": "promise new Promise(resolve => {\n          const studioUIBundleRemoteUrl = window.StudioUIBundleRemoteUrl\n          const script = document.createElement('script')\n\n          let hasScript = false;\n\n          document.querySelectorAll('script').forEach((el) => {\n            const elPathname = el.src.replace(/https?:\\/\\/[^/]+/, '')\n            const studioUIBundleRemoteUrlPathname = studioUIBundleRemoteUrl.replace(/https?:\\/\\/[^/]+/, '')\n\n            if (elPathname === studioUIBundleRemoteUrlPathname) {\n              hasScript = true;\n              return;\n            }\n          })\n\n          if (hasScript) {\n            resolve({\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            })\n            return\n          }\n\n          script.src = studioUIBundleRemoteUrl\n          script.onload = () => {\n            const proxy = {\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            resolve(proxy)\n          }\n          document.head.appendChild(script);\n        })\n        ",
      "moduleName": ".",
      "alias": "@pimcore/studio-ui-bundle",
      "entry": "*"
    },
    {
      "federationContainerName": "promise new Promise(resolve => {\n          const studioUIBundleRemoteUrl = window.StudioUIBundleRemoteUrl\n          const script = document.createElement('script')\n\n          let hasScript = false;\n\n          document.querySelectorAll('script').forEach((el) => {\n            const elPathname = el.src.replace(/https?:\\/\\/[^/]+/, '')\n            const studioUIBundleRemoteUrlPathname = studioUIBundleRemoteUrl.replace(/https?:\\/\\/[^/]+/, '')\n\n            if (elPathname === studioUIBundleRemoteUrlPathname) {\n              hasScript = true;\n              return;\n            }\n          })\n\n          if (hasScript) {\n            resolve({\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            })\n            return\n          }\n\n          script.src = studioUIBundleRemoteUrl\n          script.onload = () => {\n            const proxy = {\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            resolve(proxy)\n          }\n          document.head.appendChild(script);\n        })\n        ",
      "moduleName": "app",
      "alias": "@pimcore/studio-ui-bundle",
      "entry": "*"
    },
    {
      "federationContainerName": "promise new Promise(resolve => {\n          const studioUIBundleRemoteUrl = window.StudioUIBundleRemoteUrl\n          const script = document.createElement('script')\n\n          let hasScript = false;\n\n          document.querySelectorAll('script').forEach((el) => {\n            const elPathname = el.src.replace(/https?:\\/\\/[^/]+/, '')\n            const studioUIBundleRemoteUrlPathname = studioUIBundleRemoteUrl.replace(/https?:\\/\\/[^/]+/, '')\n\n            if (elPathname === studioUIBundleRemoteUrlPathname) {\n              hasScript = true;\n              return;\n            }\n          })\n\n          if (hasScript) {\n            resolve({\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            })\n            return\n          }\n\n          script.src = studioUIBundleRemoteUrl\n          script.onload = () => {\n            const proxy = {\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            resolve(proxy)\n          }\n          document.head.appendChild(script);\n        })\n        ",
      "moduleName": "modules/app",
      "alias": "@pimcore/studio-ui-bundle",
      "entry": "*"
    },
    {
      "federationContainerName": "promise new Promise(resolve => {\n          const studioUIBundleRemoteUrl = window.StudioUIBundleRemoteUrl\n          const script = document.createElement('script')\n\n          let hasScript = false;\n\n          document.querySelectorAll('script').forEach((el) => {\n            const elPathname = el.src.replace(/https?:\\/\\/[^/]+/, '')\n            const studioUIBundleRemoteUrlPathname = studioUIBundleRemoteUrl.replace(/https?:\\/\\/[^/]+/, '')\n\n            if (elPathname === studioUIBundleRemoteUrlPathname) {\n              hasScript = true;\n              return;\n            }\n          })\n\n          if (hasScript) {\n            resolve({\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            })\n            return\n          }\n\n          script.src = studioUIBundleRemoteUrl\n          script.onload = () => {\n            const proxy = {\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            resolve(proxy)\n          }\n          document.head.appendChild(script);\n        })\n        ",
      "moduleName": "utils",
      "alias": "@pimcore/studio-ui-bundle",
      "entry": "*"
    },
    {
      "federationContainerName": "promise new Promise(resolve => {\n          const studioUIBundleRemoteUrl = window.StudioUIBundleRemoteUrl\n          const script = document.createElement('script')\n\n          let hasScript = false;\n\n          document.querySelectorAll('script').forEach((el) => {\n            const elPathname = el.src.replace(/https?:\\/\\/[^/]+/, '')\n            const studioUIBundleRemoteUrlPathname = studioUIBundleRemoteUrl.replace(/https?:\\/\\/[^/]+/, '')\n\n            if (elPathname === studioUIBundleRemoteUrlPathname) {\n              hasScript = true;\n              return;\n            }\n          })\n\n          if (hasScript) {\n            resolve({\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            })\n            return\n          }\n\n          script.src = studioUIBundleRemoteUrl\n          script.onload = () => {\n            const proxy = {\n              get: (request) => window['pimcore_studio_ui_bundle'].get(request),\n              init: (...arg) => {\n                try {\n                  return window['pimcore_studio_ui_bundle'].init(...arg)\n                } catch(e) {\n                  console.log('remote container already initialized')\n                }\n              }\n            }\n            resolve(proxy)\n          }\n          document.head.appendChild(script);\n        })\n        ",
      "moduleName": "components",
      "alias": "@pimcore/studio-ui-bundle",
      "entry": "*"
    }
  ],
  "exposes": [
    {
      "id": "pimcore_quill_bundle:.",
      "name": ".",
      "assets": {
        "js": {
          "sync": [
            "static/js/async/872.a9470a7d.js",
            "static/js/async/__federation_expose_default_export.8b57ff93.js"
          ],
          "async": []
        },
        "css": {
          "sync": [
            "static/css/async/872.1e3b2cc8.css"
          ],
          "async": []
        }
      },
      "path": "."
    }
  ]
}